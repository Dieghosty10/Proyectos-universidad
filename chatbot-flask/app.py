from flask import Flask, render_template, request, jsonify
from datetime import datetime

app = Flask(__name__)

reglas_chatbot = {
    'saludos': {
        'palabras': ['hola', 'buenos dÃ­as', 'buenas tardes', 'buenas noches', 'saludos', 'quÃ© onda', 'quÃ© hay'],
        'respuesta': 'Â¡Hola! Â¿En quÃ© puedo ayudarte hoy?'
    },
    'despedidas': {
        'palabras': ['adiÃ³s', 'chao', 'hasta luego', 'nos vemos', 'hasta pronto', 'bye', 'hasta la prÃ³xima'],
        'respuesta': 'Â¡Hasta luego! Fue un placer ayudarte. Regresa cuando necesites algo mÃ¡s.'
    },
    'agradecimientos': {
        'palabras': ['gracias', 'te lo agradezco', 'muchas gracias', 'mil gracias', 'agradecido', 'agradecida'],
        'respuesta': 'Â¡De nada! Estoy aquÃ­ para ayudarte. Â¿Hay algo mÃ¡s en lo que pueda asistirte?'
    },
    'estado': {
        'palabras': ['cÃ³mo estÃ¡s', 'quÃ© tal', 'cÃ³mo te sientes', 'quÃ© cuentas', 'cÃ³mo va todo'],
        'respuesta': 'Â¡Estoy funcionando perfectamente! Listo para ayudarte. Â¿Y tÃº cÃ³mo estÃ¡s?'
    },
    'nombre': {
        'palabras': ['cÃ³mo te llamas', 'cuÃ¡l es tu nombre', 'tienes nombre', 'quiÃ©n eres'],
        'respuesta': 'Soy AsistenteBot, tu asistente virtual. Â¿En quÃ© puedo servirte?'
    },
    'creador': {
        'palabras': ['quiÃ©n te creÃ³', 'quiÃ©n te programÃ³', 'quiÃ©n te hizo', 'de dÃ³nde vienes'],
        'respuesta': 'Fui desarrollado por un equipo de programadores usando Python y Flask. Â¡Es un placer ayudarte!'
    },
    'hora': {
        'palabras': ['quÃ© hora es', 'dime la hora', 'hora actual', 'quÃ© horas son'],
        'respuesta': lambda: f'La hora actual es: {datetime.now().strftime("%H:%M")}'
    },
    'fecha': {
        'palabras': ['quÃ© dÃ­a es hoy', 'fecha actual', 'quÃ© fecha es hoy', 'en quÃ© fecha estamos'],
        'respuesta': lambda: f'Hoy es {datetime.now().strftime("%d/%m/%Y")}'
    },
    'ayuda': {
        'palabras': ['quÃ© puedes hacer', 'para quÃ© sirves', 'ayuda', 'funciones', 'quÃ© ofreces'],
        'respuesta': 'Puedo ayudarte con: informaciÃ³n general, hora y fecha, responder preguntas bÃ¡sicas, recomendaciones y mÃ¡s. Â¿En quÃ© necesitas ayuda?'
    },
    'clima': {
        'palabras': ['clima', 'tiempo', 'temperatura', 'hace calor', 'hace frÃ­o', 'estÃ¡ lloviendo'],
        'respuesta': 'Actualmente no tengo acceso a datos meteorolÃ³gicos en tiempo real. Â¿Te gustarÃ­a que te recomiende cÃ³mo verificar el clima?'
    },
    'recomendaciones': {
        'palabras': ['recomiÃ©ndame', 'sugerencia', 'quÃ© me recomiendas', 'ideas', 'consejo'],
        'respuesta': 'Puedo recomendarte: libros, pelÃ­culas, mÃºsica o lugares para visitar. Â¿QuÃ© tipo de recomendaciÃ³n buscas?'
    },
    'libros': {
        'palabras': ['libro', 'libros', 'leer', 'recomiÃ©ndame un libro', 'quÃ© libro leer'],
        'respuesta': 'Algunos libros recomendados: "Cien aÃ±os de soledad", "El principito", "1984", "El arte de la guerra". Â¿Te interesa algÃºn gÃ©nero en particular?'
    },
    'peliculas': {
        'palabras': ['pelicula', 'pelÃ­culas', 'ver una pelÃ­cula', 'recomiÃ©ndame una pelÃ­cula', 'cine'],
        'respuesta': 'Excelentes opciones: "El Padrino", "Interestelar", "ParÃ¡sitos", "El viaje de Chihiro". Â¿Prefieres algÃºn gÃ©nero especÃ­fico?'
    },
    'musica': {
        'palabras': ['mÃºsica', 'canciÃ³n', 'banda', 'artista', 'recomiÃ©ndame mÃºsica'],
        'respuesta': 'Puedo sugerirte artistas como: The Beatles, Queen, Bad Bunny, Taylor Swift. Â¿QuÃ© gÃ©nero musical prefieres?'
    },
    'restaurantes': {
        'palabras': ['comer', 'restaurante', 'hambre', 'dÃ³nde comer', 'recomiÃ©ndame un lugar para comer'],
        'respuesta': 'Depende de tu ubicaciÃ³n. Â¿Te gustarÃ­a comida italiana, mexicana, japonesa o de otro tipo?'
    },
    'chiste': {
        'palabras': ['cuÃ©ntame un chiste', 'dime algo gracioso', 'chiste', 'broma'],
        'respuesta': 'Â¿Sabes por quÃ© los programadores confunden Halloween con Navidad? Porque Oct 31 == Dec 25. ğŸ˜„'
    },
    'programacion': {
        'palabras': ['python', 'flask', 'programar', 'cÃ³digo', 'desarrollo web', 'javascript'],
        'respuesta': 'Puedo hablar sobre programaciÃ³n. Este chatbot estÃ¡ construido con Python y Flask. Â¿Tienes alguna pregunta especÃ­fica sobre desarrollo?'
    },
    'default': {
        'respuesta': 'No estoy seguro de entender completamente. Â¿PodrÃ­as reformular tu pregunta o preguntarme algo diferente?'
    }
}

def obtener_respuesta(mensaje):
    mensaje = mensaje.lower()
    
    for categoria, contenido in reglas_chatbot.items():
        if categoria == 'default':
            continue
            
        if 'palabras' in contenido:
            for palabra in contenido['palabras']:
                if palabra in mensaje:
                    if callable(contenido['respuesta']):
                        return contenido['respuesta']()
                    return contenido['respuesta']
    
    return reglas_chatbot['default']['respuesta']

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/enviar_mensaje', methods=['POST'])
def enviar_mensaje():
    datos = request.get_json()
    mensaje_usuario = datos['mensaje']
    respuesta_bot = obtener_respuesta(mensaje_usuario)
    
    return jsonify({
        'usuario': mensaje_usuario,
        'bot': respuesta_bot
    })

if __name__ == '__main__':
    app.run(debug=True)